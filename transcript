# Reading pref.tcl
# //  Questa Lattice OEM Edition-64
# //  Version 2024.2 win64 May 20 2024
# //
# // Unpublished work. Copyright 2024 Siemens
# //
# // This material contains trade secrets or otherwise confidential information
# // owned by Siemens Industry Software Inc. or its affiliates (collectively,
# // "SISW"), or its licensors. Access to and use of this information is strictly
# // limited as set forth in the Customer's applicable agreements with SISW.
# //
# // This material may not be copied, distributed, or otherwise disclosed outside
# // of the Customer's facilities without the express written permission of SISW,
# // and may not be used in any way not expressly authorized by SISW.
# //
# Loading project lab2_mt_testbench
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
# Load canceled
vlog -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh
# Questa Lattice OEM Edition-64 vlog 2024.2 Compiler 2024.05 May 20 2024
# Start time: 22:58:02 on Sep 09,2025
# vlog -reportprogress 300 -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh 
# -- Refreshing module clk_gen
# -- Refreshing module lab2_mt
# -- Refreshing module led_adder
# -- Refreshing module sev_seg
# -- Refreshing module sev_seg_sel
# -- Refreshing module sev_seg_testbench
# -- Refreshing module testbench_lab2_mt
# End time: 22:58:02 on Sep 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
vcom -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh
# Questa Lattice OEM Edition-64 vcom 2024.2 Compiler 2024.05 May 20 2024
# Start time: 22:58:02 on Sep 09,2025
# vcom -reportprogress 300 -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh 
# -- Skipping module clk_gen
# -- Skipping module lab2_mt
# -- Skipping module led_adder
# -- Skipping module sev_seg
# -- Skipping module sev_seg_sel
# -- Skipping module sev_seg_testbench
# -- Skipping module testbench_lab2_mt
# End time: 22:58:02 on Sep 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vlog -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh
# Questa Lattice OEM Edition-64 vlog 2024.2 Compiler 2024.05 May 20 2024
# Start time: 22:59:32 on Sep 09,2025
# vlog -reportprogress 300 -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh 
# -- Refreshing module clk_gen
# -- Refreshing module lab2_mt
# -- Refreshing module led_adder
# -- Refreshing module sev_seg
# -- Refreshing module sev_seg_sel
# -- Refreshing module sev_seg_testbench
# -- Refreshing module testbench_clk_gen
# -- Refreshing module testbench_lab2_mt
# -- Refreshing module testbench_led_adder
# -- Refreshing module testbench_sev_seg
# -- Refreshing module testbench_sev_seg_sel
# End time: 22:59:33 on Sep 09,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
vcom -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh
# Questa Lattice OEM Edition-64 vcom 2024.2 Compiler 2024.05 May 20 2024
# Start time: 22:59:33 on Sep 09,2025
# vcom -reportprogress 300 -work C:/Users/mtatsumi/my_designs/e155-lab2/lab2 -refresh -force_refresh 
# -- Skipping module clk_gen
# -- Skipping module lab2_mt
# -- Skipping module led_adder
# -- Skipping module sev_seg
# -- Skipping module sev_seg_sel
# -- Skipping module sev_seg_testbench
# -- Skipping module testbench_clk_gen
# -- Skipping module testbench_lab2_mt
# -- Skipping module testbench_led_adder
# -- Skipping module testbench_sev_seg
# -- Skipping module testbench_sev_seg_sel
# End time: 22:59:33 on Sep 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
vsim -vopt lab2.testbench_clk_gen
# vsim -vopt lab2.testbench_clk_gen 
# Start time: 23:00:00 on Sep 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Error: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/clk_gen.sv(7): Module 'HSOSC' is not defined.
#  For instance 'hf_osc' at path 'testbench_clk_gen.dut'
# Optimization failed
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=1, Warnings=0.
# Error loading design
# End time: 23:00:00 on Sep 09,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 6
vsim -vopt lab2.testbench_clk_gen {-voptargs=+acc -L iCE40UP}
# vsim -vopt lab2.testbench_clk_gen -voptargs="+acc -L iCE40UP" 
# Start time: 23:00:25 on Sep 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_clk_gen(fast)
# Loading work.clk_gen(fast)
# Loading iCE40UP.HSOSC(fast)
add wave  \
sim:/testbench_clk_gen/clk \
sim:/testbench_clk_gen/reset \
sim:/testbench_clk_gen/test_clk
run 10000000
# Fail: test_clk = 1'b0. Expecting 1'b1.
# Fail: test_clk = 1'b1. Expecting 1'b0.
# Completed test for clk generation.
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv(40)
#    Time: 20 ns  Iteration: 0  Instance: /testbench_clk_gen
# Break in Module testbench_clk_gen at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv line 40
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt lab2.testbench_clk_gen {-voptargs=+acc -L iCE40UP}
# End time: 23:02:53 on Sep 09,2025, Elapsed time: 0:02:28
# Errors: 0, Warnings: 3
# vsim -vopt lab2.testbench_clk_gen -voptargs="+acc -L iCE40UP" 
# Start time: 23:02:53 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_clk_gen(fast)
# Loading work.clk_gen(fast)
# Loading iCE40UP.HSOSC(fast)
add wave  \
sim:/testbench_clk_gen/clk \
sim:/testbench_clk_gen/reset \
sim:/testbench_clk_gen/test_clk
run 10000000
# Completed test for clk generation.
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv(40)
#    Time: 20 ns  Iteration: 0  Instance: /testbench_clk_gen
# Break in Module testbench_clk_gen at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv line 40
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_led_adder
# End time: 23:04:30 on Sep 09,2025, Elapsed time: 0:01:37
# Errors: 0, Warnings: 2
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_led_adder 
# Start time: 23:04:30 on Sep 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_led_adder(fast)
# Loading work.led_adder(fast)
add wave  \
sim:/testbench_led_adder/clk \
sim:/testbench_led_adder/reset \
sim:/testbench_led_adder/onboard_sw \
sim:/testbench_led_adder/bboard_sw \
sim:/testbench_led_adder/led \
sim:/testbench_led_adder/led_expected \
sim:/testbench_led_adder/test_idx \
sim:/testbench_led_adder/errors
run 10000000000
# starting case 0 a
# starting case 1 a
# Fail: led = 00000, expected = 00001. Inputs: onb: 1111, bb: 1110
# starting case 2 a
# Fail: led = 00001, expected = 00010. Inputs: onb: 1111, bb: 1101
# starting case 3 a
# Fail: led = 00010, expected = 00011. Inputs: onb: 1111, bb: 1100
# starting case 4 a
# Fail: led = 00011, expected = 00100. Inputs: onb: 1111, bb: 1011
# starting case 5 a
# Fail: led = 00100, expected = 00101. Inputs: onb: 1111, bb: 1010
# starting case 6 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1111, bb: 1001
# starting case 7 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1111, bb: 1000
# starting case 8 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1111, bb: 0111
# starting case 9 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1111, bb: 0110
# starting case 10 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1111, bb: 0101
# starting case 11 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1111, bb: 0100
# starting case 12 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1111, bb: 0011
# starting case 13 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1111, bb: 0010
# starting case 14 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1111, bb: 0001
# starting case 15 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1111, bb: 0000
# starting case 16 a
# Fail: led = 10000, expected = 00001. Inputs: onb: 1110, bb: 1111
# starting case 17 a
# Fail: led = 00001, expected = 00010. Inputs: onb: 1110, bb: 1110
# starting case 18 a
# Fail: led = 00010, expected = 00011. Inputs: onb: 1110, bb: 1101
# starting case 19 a
# Fail: led = 00011, expected = 00100. Inputs: onb: 1110, bb: 1100
# starting case 20 a
# Fail: led = 00100, expected = 00101. Inputs: onb: 1110, bb: 1011
# starting case 21 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1110, bb: 1010
# starting case 22 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1110, bb: 1001
# starting case 23 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1110, bb: 1000
# starting case 24 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1110, bb: 0111
# starting case 25 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1110, bb: 0110
# starting case 26 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1110, bb: 0101
# starting case 27 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1110, bb: 0100
# starting case 28 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1110, bb: 0011
# starting case 29 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1110, bb: 0010
# starting case 30 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1110, bb: 0001
# starting case 31 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1110, bb: 0000
# starting case 32 a
# Fail: led = 10001, expected = 00010. Inputs: onb: 1101, bb: 1111
# starting case 33 a
# Fail: led = 00010, expected = 00011. Inputs: onb: 1101, bb: 1110
# starting case 34 a
# Fail: led = 00011, expected = 00100. Inputs: onb: 1101, bb: 1101
# starting case 35 a
# Fail: led = 00100, expected = 00101. Inputs: onb: 1101, bb: 1100
# starting case 36 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1101, bb: 1011
# starting case 37 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1101, bb: 1010
# starting case 38 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1101, bb: 1001
# starting case 39 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1101, bb: 1000
# starting case 40 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1101, bb: 0111
# starting case 41 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1101, bb: 0110
# starting case 42 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1101, bb: 0101
# starting case 43 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1101, bb: 0100
# starting case 44 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1101, bb: 0011
# starting case 45 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1101, bb: 0010
# starting case 46 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1101, bb: 0001
# starting case 47 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1101, bb: 0000
# starting case 48 a
# Fail: led = 10010, expected = 00011. Inputs: onb: 1100, bb: 1111
# starting case 49 a
# Fail: led = 00011, expected = 00100. Inputs: onb: 1100, bb: 1110
# starting case 50 a
# Fail: led = 00100, expected = 00101. Inputs: onb: 1100, bb: 1101
# starting case 51 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1100, bb: 1100
# starting case 52 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1100, bb: 1011
# starting case 53 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1100, bb: 1010
# starting case 54 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1100, bb: 1001
# starting case 55 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1100, bb: 1000
# starting case 56 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1100, bb: 0111
# starting case 57 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1100, bb: 0110
# starting case 58 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1100, bb: 0101
# starting case 59 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1100, bb: 0100
# starting case 60 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1100, bb: 0011
# starting case 61 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1100, bb: 0010
# starting case 62 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1100, bb: 0001
# starting case 63 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 1100, bb: 0000
# starting case 64 a
# Fail: led = 10011, expected = 00100. Inputs: onb: 1011, bb: 1111
# starting case 65 a
# Fail: led = 00100, expected = 00101. Inputs: onb: 1011, bb: 1110
# starting case 66 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1011, bb: 1101
# starting case 67 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1011, bb: 1100
# starting case 68 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1011, bb: 1011
# starting case 69 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1011, bb: 1010
# starting case 70 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1011, bb: 1001
# starting case 71 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1011, bb: 1000
# starting case 72 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1011, bb: 0111
# starting case 73 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1011, bb: 0110
# starting case 74 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1011, bb: 0101
# starting case 75 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1011, bb: 0100
# starting case 76 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1011, bb: 0011
# starting case 77 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1011, bb: 0010
# starting case 78 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 1011, bb: 0001
# starting case 79 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 1011, bb: 0000
# starting case 80 a
# Fail: led = 10100, expected = 00101. Inputs: onb: 1010, bb: 1111
# starting case 81 a
# Fail: led = 00101, expected = 00110. Inputs: onb: 1010, bb: 1110
# starting case 82 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1010, bb: 1101
# starting case 83 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1010, bb: 1100
# starting case 84 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1010, bb: 1011
# starting case 85 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1010, bb: 1010
# starting case 86 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1010, bb: 1001
# starting case 87 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1010, bb: 1000
# starting case 88 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1010, bb: 0111
# starting case 89 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1010, bb: 0110
# starting case 90 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1010, bb: 0101
# starting case 91 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1010, bb: 0100
# starting case 92 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1010, bb: 0011
# starting case 93 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 1010, bb: 0010
# starting case 94 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 1010, bb: 0001
# starting case 95 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 1010, bb: 0000
# starting case 96 a
# Fail: led = 10101, expected = 00110. Inputs: onb: 1001, bb: 1111
# starting case 97 a
# Fail: led = 00110, expected = 00111. Inputs: onb: 1001, bb: 1110
# starting case 98 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1001, bb: 1101
# starting case 99 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1001, bb: 1100
# starting case 100 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1001, bb: 1011
# starting case 101 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1001, bb: 1010
# starting case 102 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1001, bb: 1001
# starting case 103 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1001, bb: 1000
# starting case 104 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1001, bb: 0111
# starting case 105 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1001, bb: 0110
# starting case 106 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1001, bb: 0101
# starting case 107 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1001, bb: 0100
# starting case 108 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 1001, bb: 0011
# starting case 109 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 1001, bb: 0010
# starting case 110 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 1001, bb: 0001
# starting case 111 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 1001, bb: 0000
# starting case 112 a
# Fail: led = 10110, expected = 00111. Inputs: onb: 1000, bb: 1111
# starting case 113 a
# Fail: led = 00111, expected = 01000. Inputs: onb: 1000, bb: 1110
# starting case 114 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 1000, bb: 1101
# starting case 115 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 1000, bb: 1100
# starting case 116 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 1000, bb: 1011
# starting case 117 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 1000, bb: 1010
# starting case 118 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 1000, bb: 1001
# starting case 119 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 1000, bb: 1000
# starting case 120 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 1000, bb: 0111
# starting case 121 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 1000, bb: 0110
# starting case 122 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 1000, bb: 0101
# starting case 123 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 1000, bb: 0100
# starting case 124 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 1000, bb: 0011
# starting case 125 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 1000, bb: 0010
# starting case 126 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 1000, bb: 0001
# starting case 127 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 1000, bb: 0000
# starting case 128 a
# Fail: led = 10111, expected = 01000. Inputs: onb: 0111, bb: 1111
# starting case 129 a
# Fail: led = 01000, expected = 01001. Inputs: onb: 0111, bb: 1110
# starting case 130 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 0111, bb: 1101
# starting case 131 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 0111, bb: 1100
# starting case 132 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 0111, bb: 1011
# starting case 133 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 0111, bb: 1010
# starting case 134 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0111, bb: 1001
# starting case 135 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0111, bb: 1000
# starting case 136 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0111, bb: 0111
# starting case 137 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0111, bb: 0110
# starting case 138 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0111, bb: 0101
# starting case 139 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0111, bb: 0100
# starting case 140 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0111, bb: 0011
# starting case 141 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0111, bb: 0010
# starting case 142 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0111, bb: 0001
# starting case 143 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0111, bb: 0000
# starting case 144 a
# Fail: led = 11000, expected = 01001. Inputs: onb: 0110, bb: 1111
# starting case 145 a
# Fail: led = 01001, expected = 01010. Inputs: onb: 0110, bb: 1110
# starting case 146 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 0110, bb: 1101
# starting case 147 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 0110, bb: 1100
# starting case 148 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 0110, bb: 1011
# starting case 149 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0110, bb: 1010
# starting case 150 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0110, bb: 1001
# starting case 151 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0110, bb: 1000
# starting case 152 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0110, bb: 0111
# starting case 153 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0110, bb: 0110
# starting case 154 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0110, bb: 0101
# starting case 155 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0110, bb: 0100
# starting case 156 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0110, bb: 0011
# starting case 157 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0110, bb: 0010
# starting case 158 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0110, bb: 0001
# starting case 159 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0110, bb: 0000
# starting case 160 a
# Fail: led = 11001, expected = 01010. Inputs: onb: 0101, bb: 1111
# starting case 161 a
# Fail: led = 01010, expected = 01011. Inputs: onb: 0101, bb: 1110
# starting case 162 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 0101, bb: 1101
# starting case 163 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 0101, bb: 1100
# starting case 164 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0101, bb: 1011
# starting case 165 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0101, bb: 1010
# starting case 166 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0101, bb: 1001
# starting case 167 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0101, bb: 1000
# starting case 168 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0101, bb: 0111
# starting case 169 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0101, bb: 0110
# starting case 170 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0101, bb: 0101
# starting case 171 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0101, bb: 0100
# starting case 172 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0101, bb: 0011
# starting case 173 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0101, bb: 0010
# starting case 174 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0101, bb: 0001
# starting case 175 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0101, bb: 0000
# starting case 176 a
# Fail: led = 11010, expected = 01011. Inputs: onb: 0100, bb: 1111
# starting case 177 a
# Fail: led = 01011, expected = 01100. Inputs: onb: 0100, bb: 1110
# starting case 178 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 0100, bb: 1101
# starting case 179 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0100, bb: 1100
# starting case 180 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0100, bb: 1011
# starting case 181 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0100, bb: 1010
# starting case 182 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0100, bb: 1001
# starting case 183 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0100, bb: 1000
# starting case 184 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0100, bb: 0111
# starting case 185 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0100, bb: 0110
# starting case 186 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0100, bb: 0101
# starting case 187 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0100, bb: 0100
# starting case 188 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0100, bb: 0011
# starting case 189 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0100, bb: 0010
# starting case 190 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0100, bb: 0001
# starting case 191 a
# Fail: led = 11001, expected = 11010. Inputs: onb: 0100, bb: 0000
# starting case 192 a
# Fail: led = 11011, expected = 01100. Inputs: onb: 0011, bb: 1111
# starting case 193 a
# Fail: led = 01100, expected = 01101. Inputs: onb: 0011, bb: 1110
# starting case 194 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0011, bb: 1101
# starting case 195 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0011, bb: 1100
# starting case 196 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0011, bb: 1011
# starting case 197 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0011, bb: 1010
# starting case 198 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0011, bb: 1001
# starting case 199 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0011, bb: 1000
# starting case 200 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0011, bb: 0111
# starting case 201 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0011, bb: 0110
# starting case 202 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0011, bb: 0101
# starting case 203 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0011, bb: 0100
# starting case 204 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0011, bb: 0011
# starting case 205 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0011, bb: 0010
# starting case 206 a
# Fail: led = 11001, expected = 11010. Inputs: onb: 0011, bb: 0001
# starting case 207 a
# Fail: led = 11010, expected = 11011. Inputs: onb: 0011, bb: 0000
# starting case 208 a
# Fail: led = 11100, expected = 01101. Inputs: onb: 0010, bb: 1111
# starting case 209 a
# Fail: led = 01101, expected = 01110. Inputs: onb: 0010, bb: 1110
# starting case 210 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0010, bb: 1101
# starting case 211 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0010, bb: 1100
# starting case 212 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0010, bb: 1011
# starting case 213 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0010, bb: 1010
# starting case 214 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0010, bb: 1001
# starting case 215 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0010, bb: 1000
# starting case 216 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0010, bb: 0111
# starting case 217 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0010, bb: 0110
# starting case 218 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0010, bb: 0101
# starting case 219 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0010, bb: 0100
# starting case 220 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0010, bb: 0011
# starting case 221 a
# Fail: led = 11001, expected = 11010. Inputs: onb: 0010, bb: 0010
# starting case 222 a
# Fail: led = 11010, expected = 11011. Inputs: onb: 0010, bb: 0001
# starting case 223 a
# Fail: led = 11011, expected = 11100. Inputs: onb: 0010, bb: 0000
# starting case 224 a
# Fail: led = 11101, expected = 01110. Inputs: onb: 0001, bb: 1111
# starting case 225 a
# Fail: led = 01110, expected = 01111. Inputs: onb: 0001, bb: 1110
# starting case 226 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0001, bb: 1101
# starting case 227 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0001, bb: 1100
# starting case 228 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0001, bb: 1011
# starting case 229 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0001, bb: 1010
# starting case 230 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0001, bb: 1001
# starting case 231 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0001, bb: 1000
# starting case 232 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0001, bb: 0111
# starting case 233 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0001, bb: 0110
# starting case 234 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0001, bb: 0101
# starting case 235 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0001, bb: 0100
# starting case 236 a
# Fail: led = 11001, expected = 11010. Inputs: onb: 0001, bb: 0011
# starting case 237 a
# Fail: led = 11010, expected = 11011. Inputs: onb: 0001, bb: 0010
# starting case 238 a
# Fail: led = 11011, expected = 11100. Inputs: onb: 0001, bb: 0001
# starting case 239 a
# Fail: led = 11100, expected = 11101. Inputs: onb: 0001, bb: 0000
# starting case 240 a
# Fail: led = 11110, expected = 01111. Inputs: onb: 0000, bb: 1111
# starting case 241 a
# Fail: led = 01111, expected = 10000. Inputs: onb: 0000, bb: 1110
# starting case 242 a
# Fail: led = 10000, expected = 10001. Inputs: onb: 0000, bb: 1101
# starting case 243 a
# Fail: led = 10001, expected = 10010. Inputs: onb: 0000, bb: 1100
# starting case 244 a
# Fail: led = 10010, expected = 10011. Inputs: onb: 0000, bb: 1011
# starting case 245 a
# Fail: led = 10011, expected = 10100. Inputs: onb: 0000, bb: 1010
# starting case 246 a
# Fail: led = 10100, expected = 10101. Inputs: onb: 0000, bb: 1001
# starting case 247 a
# Fail: led = 10101, expected = 10110. Inputs: onb: 0000, bb: 1000
# starting case 248 a
# Fail: led = 10110, expected = 10111. Inputs: onb: 0000, bb: 0111
# starting case 249 a
# Fail: led = 10111, expected = 11000. Inputs: onb: 0000, bb: 0110
# starting case 250 a
# Fail: led = 11000, expected = 11001. Inputs: onb: 0000, bb: 0101
# starting case 251 a
# Fail: led = 11001, expected = 11010. Inputs: onb: 0000, bb: 0100
# starting case 252 a
# Fail: led = 11010, expected = 11011. Inputs: onb: 0000, bb: 0011
# starting case 253 a
# Fail: led = 11011, expected = 11100. Inputs: onb: 0000, bb: 0010
# starting case 254 a
# Fail: led = 11100, expected = 11101. Inputs: onb: 0000, bb: 0001
# starting case 255 a
# Fail: led = 11101, expected = 11110. Inputs: onb: 0000, bb: 0000
# Completed        256 tests with 11111111 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv(62)
#    Time: 2570 ns  Iteration: 0  Instance: /testbench_led_adder
# Break in Module testbench_led_adder at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv line 62
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_led_adder
# End time: 23:08:21 on Sep 09,2025, Elapsed time: 0:03:51
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_led_adder 
# Start time: 23:08:21 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_led_adder(fast)
# Loading work.led_adder(fast)
add wave  \
sim:/testbench_led_adder/clk \
sim:/testbench_led_adder/reset \
sim:/testbench_led_adder/onboard_sw \
sim:/testbench_led_adder/bboard_sw \
sim:/testbench_led_adder/led \
sim:/testbench_led_adder/led_expected \
sim:/testbench_led_adder/test_idx \
sim:/testbench_led_adder/errors
run 1000000000
# Fail: led = 00000, expected = 00001. Inputs: onb: 1111, bb: 1110
# Fail: led = 00001, expected = 00010. Inputs: onb: 1111, bb: 1101
# Fail: led = 00010, expected = 00011. Inputs: onb: 1111, bb: 1100
# Fail: led = 00011, expected = 00100. Inputs: onb: 1111, bb: 1011
# Fail: led = 00100, expected = 00101. Inputs: onb: 1111, bb: 1010
# Fail: led = 00101, expected = 00110. Inputs: onb: 1111, bb: 1001
# Fail: led = 00110, expected = 00111. Inputs: onb: 1111, bb: 1000
# Fail: led = 00111, expected = 01000. Inputs: onb: 1111, bb: 0111
# Fail: led = 01000, expected = 01001. Inputs: onb: 1111, bb: 0110
# Fail: led = 01001, expected = 01010. Inputs: onb: 1111, bb: 0101
# Fail: led = 01010, expected = 01011. Inputs: onb: 1111, bb: 0100
# Fail: led = 01011, expected = 01100. Inputs: onb: 1111, bb: 0011
# Fail: led = 01100, expected = 01101. Inputs: onb: 1111, bb: 0010
# Fail: led = 01101, expected = 01110. Inputs: onb: 1111, bb: 0001
# Fail: led = 01110, expected = 01111. Inputs: onb: 1111, bb: 0000
# Fail: led = 10000, expected = 00001. Inputs: onb: 1110, bb: 1111
# Fail: led = 00001, expected = 00010. Inputs: onb: 1110, bb: 1110
# Fail: led = 00010, expected = 00011. Inputs: onb: 1110, bb: 1101
# Fail: led = 00011, expected = 00100. Inputs: onb: 1110, bb: 1100
# Fail: led = 00100, expected = 00101. Inputs: onb: 1110, bb: 1011
# Fail: led = 00101, expected = 00110. Inputs: onb: 1110, bb: 1010
# Fail: led = 00110, expected = 00111. Inputs: onb: 1110, bb: 1001
# Fail: led = 00111, expected = 01000. Inputs: onb: 1110, bb: 1000
# Fail: led = 01000, expected = 01001. Inputs: onb: 1110, bb: 0111
# Fail: led = 01001, expected = 01010. Inputs: onb: 1110, bb: 0110
# Fail: led = 01010, expected = 01011. Inputs: onb: 1110, bb: 0101
# Fail: led = 01011, expected = 01100. Inputs: onb: 1110, bb: 0100
# Fail: led = 01100, expected = 01101. Inputs: onb: 1110, bb: 0011
# Fail: led = 01101, expected = 01110. Inputs: onb: 1110, bb: 0010
# Fail: led = 01110, expected = 01111. Inputs: onb: 1110, bb: 0001
# Fail: led = 01111, expected = 10000. Inputs: onb: 1110, bb: 0000
# Fail: led = 10001, expected = 00010. Inputs: onb: 1101, bb: 1111
# Fail: led = 00010, expected = 00011. Inputs: onb: 1101, bb: 1110
# Fail: led = 00011, expected = 00100. Inputs: onb: 1101, bb: 1101
# Fail: led = 00100, expected = 00101. Inputs: onb: 1101, bb: 1100
# Fail: led = 00101, expected = 00110. Inputs: onb: 1101, bb: 1011
# Fail: led = 00110, expected = 00111. Inputs: onb: 1101, bb: 1010
# Fail: led = 00111, expected = 01000. Inputs: onb: 1101, bb: 1001
# Fail: led = 01000, expected = 01001. Inputs: onb: 1101, bb: 1000
# Fail: led = 01001, expected = 01010. Inputs: onb: 1101, bb: 0111
# Fail: led = 01010, expected = 01011. Inputs: onb: 1101, bb: 0110
# Fail: led = 01011, expected = 01100. Inputs: onb: 1101, bb: 0101
# Fail: led = 01100, expected = 01101. Inputs: onb: 1101, bb: 0100
# Fail: led = 01101, expected = 01110. Inputs: onb: 1101, bb: 0011
# Fail: led = 01110, expected = 01111. Inputs: onb: 1101, bb: 0010
# Fail: led = 01111, expected = 10000. Inputs: onb: 1101, bb: 0001
# Fail: led = 10000, expected = 10001. Inputs: onb: 1101, bb: 0000
# Fail: led = 10010, expected = 00011. Inputs: onb: 1100, bb: 1111
# Fail: led = 00011, expected = 00100. Inputs: onb: 1100, bb: 1110
# Fail: led = 00100, expected = 00101. Inputs: onb: 1100, bb: 1101
# Fail: led = 00101, expected = 00110. Inputs: onb: 1100, bb: 1100
# Fail: led = 00110, expected = 00111. Inputs: onb: 1100, bb: 1011
# Fail: led = 00111, expected = 01000. Inputs: onb: 1100, bb: 1010
# Fail: led = 01000, expected = 01001. Inputs: onb: 1100, bb: 1001
# Fail: led = 01001, expected = 01010. Inputs: onb: 1100, bb: 1000
# Fail: led = 01010, expected = 01011. Inputs: onb: 1100, bb: 0111
# Fail: led = 01011, expected = 01100. Inputs: onb: 1100, bb: 0110
# Fail: led = 01100, expected = 01101. Inputs: onb: 1100, bb: 0101
# Fail: led = 01101, expected = 01110. Inputs: onb: 1100, bb: 0100
# Fail: led = 01110, expected = 01111. Inputs: onb: 1100, bb: 0011
# Fail: led = 01111, expected = 10000. Inputs: onb: 1100, bb: 0010
# Fail: led = 10000, expected = 10001. Inputs: onb: 1100, bb: 0001
# Fail: led = 10001, expected = 10010. Inputs: onb: 1100, bb: 0000
# Fail: led = 10011, expected = 00100. Inputs: onb: 1011, bb: 1111
# Fail: led = 00100, expected = 00101. Inputs: onb: 1011, bb: 1110
# Fail: led = 00101, expected = 00110. Inputs: onb: 1011, bb: 1101
# Fail: led = 00110, expected = 00111. Inputs: onb: 1011, bb: 1100
# Fail: led = 00111, expected = 01000. Inputs: onb: 1011, bb: 1011
# Fail: led = 01000, expected = 01001. Inputs: onb: 1011, bb: 1010
# Fail: led = 01001, expected = 01010. Inputs: onb: 1011, bb: 1001
# Fail: led = 01010, expected = 01011. Inputs: onb: 1011, bb: 1000
# Fail: led = 01011, expected = 01100. Inputs: onb: 1011, bb: 0111
# Fail: led = 01100, expected = 01101. Inputs: onb: 1011, bb: 0110
# Fail: led = 01101, expected = 01110. Inputs: onb: 1011, bb: 0101
# Fail: led = 01110, expected = 01111. Inputs: onb: 1011, bb: 0100
# Fail: led = 01111, expected = 10000. Inputs: onb: 1011, bb: 0011
# Fail: led = 10000, expected = 10001. Inputs: onb: 1011, bb: 0010
# Fail: led = 10001, expected = 10010. Inputs: onb: 1011, bb: 0001
# Fail: led = 10010, expected = 10011. Inputs: onb: 1011, bb: 0000
# Fail: led = 10100, expected = 00101. Inputs: onb: 1010, bb: 1111
# Fail: led = 00101, expected = 00110. Inputs: onb: 1010, bb: 1110
# Fail: led = 00110, expected = 00111. Inputs: onb: 1010, bb: 1101
# Fail: led = 00111, expected = 01000. Inputs: onb: 1010, bb: 1100
# Fail: led = 01000, expected = 01001. Inputs: onb: 1010, bb: 1011
# Fail: led = 01001, expected = 01010. Inputs: onb: 1010, bb: 1010
# Fail: led = 01010, expected = 01011. Inputs: onb: 1010, bb: 1001
# Fail: led = 01011, expected = 01100. Inputs: onb: 1010, bb: 1000
# Fail: led = 01100, expected = 01101. Inputs: onb: 1010, bb: 0111
# Fail: led = 01101, expected = 01110. Inputs: onb: 1010, bb: 0110
# Fail: led = 01110, expected = 01111. Inputs: onb: 1010, bb: 0101
# Fail: led = 01111, expected = 10000. Inputs: onb: 1010, bb: 0100
# Fail: led = 10000, expected = 10001. Inputs: onb: 1010, bb: 0011
# Fail: led = 10001, expected = 10010. Inputs: onb: 1010, bb: 0010
# Fail: led = 10010, expected = 10011. Inputs: onb: 1010, bb: 0001
# Fail: led = 10011, expected = 10100. Inputs: onb: 1010, bb: 0000
# Fail: led = 10101, expected = 00110. Inputs: onb: 1001, bb: 1111
# Fail: led = 00110, expected = 00111. Inputs: onb: 1001, bb: 1110
# Fail: led = 00111, expected = 01000. Inputs: onb: 1001, bb: 1101
# Fail: led = 01000, expected = 01001. Inputs: onb: 1001, bb: 1100
# Fail: led = 01001, expected = 01010. Inputs: onb: 1001, bb: 1011
# Fail: led = 01010, expected = 01011. Inputs: onb: 1001, bb: 1010
# Fail: led = 01011, expected = 01100. Inputs: onb: 1001, bb: 1001
# Fail: led = 01100, expected = 01101. Inputs: onb: 1001, bb: 1000
# Fail: led = 01101, expected = 01110. Inputs: onb: 1001, bb: 0111
# Fail: led = 01110, expected = 01111. Inputs: onb: 1001, bb: 0110
# Fail: led = 01111, expected = 10000. Inputs: onb: 1001, bb: 0101
# Fail: led = 10000, expected = 10001. Inputs: onb: 1001, bb: 0100
# Fail: led = 10001, expected = 10010. Inputs: onb: 1001, bb: 0011
# Fail: led = 10010, expected = 10011. Inputs: onb: 1001, bb: 0010
# Fail: led = 10011, expected = 10100. Inputs: onb: 1001, bb: 0001
# Fail: led = 10100, expected = 10101. Inputs: onb: 1001, bb: 0000
# Fail: led = 10110, expected = 00111. Inputs: onb: 1000, bb: 1111
# Fail: led = 00111, expected = 01000. Inputs: onb: 1000, bb: 1110
# Fail: led = 01000, expected = 01001. Inputs: onb: 1000, bb: 1101
# Fail: led = 01001, expected = 01010. Inputs: onb: 1000, bb: 1100
# Fail: led = 01010, expected = 01011. Inputs: onb: 1000, bb: 1011
# Fail: led = 01011, expected = 01100. Inputs: onb: 1000, bb: 1010
# Fail: led = 01100, expected = 01101. Inputs: onb: 1000, bb: 1001
# Fail: led = 01101, expected = 01110. Inputs: onb: 1000, bb: 1000
# Fail: led = 01110, expected = 01111. Inputs: onb: 1000, bb: 0111
# Fail: led = 01111, expected = 10000. Inputs: onb: 1000, bb: 0110
# Fail: led = 10000, expected = 10001. Inputs: onb: 1000, bb: 0101
# Fail: led = 10001, expected = 10010. Inputs: onb: 1000, bb: 0100
# Fail: led = 10010, expected = 10011. Inputs: onb: 1000, bb: 0011
# Fail: led = 10011, expected = 10100. Inputs: onb: 1000, bb: 0010
# Fail: led = 10100, expected = 10101. Inputs: onb: 1000, bb: 0001
# Fail: led = 10101, expected = 10110. Inputs: onb: 1000, bb: 0000
# Fail: led = 10111, expected = 01000. Inputs: onb: 0111, bb: 1111
# Fail: led = 01000, expected = 01001. Inputs: onb: 0111, bb: 1110
# Fail: led = 01001, expected = 01010. Inputs: onb: 0111, bb: 1101
# Fail: led = 01010, expected = 01011. Inputs: onb: 0111, bb: 1100
# Fail: led = 01011, expected = 01100. Inputs: onb: 0111, bb: 1011
# Fail: led = 01100, expected = 01101. Inputs: onb: 0111, bb: 1010
# Fail: led = 01101, expected = 01110. Inputs: onb: 0111, bb: 1001
# Fail: led = 01110, expected = 01111. Inputs: onb: 0111, bb: 1000
# Fail: led = 01111, expected = 10000. Inputs: onb: 0111, bb: 0111
# Fail: led = 10000, expected = 10001. Inputs: onb: 0111, bb: 0110
# Fail: led = 10001, expected = 10010. Inputs: onb: 0111, bb: 0101
# Fail: led = 10010, expected = 10011. Inputs: onb: 0111, bb: 0100
# Fail: led = 10011, expected = 10100. Inputs: onb: 0111, bb: 0011
# Fail: led = 10100, expected = 10101. Inputs: onb: 0111, bb: 0010
# Fail: led = 10101, expected = 10110. Inputs: onb: 0111, bb: 0001
# Fail: led = 10110, expected = 10111. Inputs: onb: 0111, bb: 0000
# Fail: led = 11000, expected = 01001. Inputs: onb: 0110, bb: 1111
# Fail: led = 01001, expected = 01010. Inputs: onb: 0110, bb: 1110
# Fail: led = 01010, expected = 01011. Inputs: onb: 0110, bb: 1101
# Fail: led = 01011, expected = 01100. Inputs: onb: 0110, bb: 1100
# Fail: led = 01100, expected = 01101. Inputs: onb: 0110, bb: 1011
# Fail: led = 01101, expected = 01110. Inputs: onb: 0110, bb: 1010
# Fail: led = 01110, expected = 01111. Inputs: onb: 0110, bb: 1001
# Fail: led = 01111, expected = 10000. Inputs: onb: 0110, bb: 1000
# Fail: led = 10000, expected = 10001. Inputs: onb: 0110, bb: 0111
# Fail: led = 10001, expected = 10010. Inputs: onb: 0110, bb: 0110
# Fail: led = 10010, expected = 10011. Inputs: onb: 0110, bb: 0101
# Fail: led = 10011, expected = 10100. Inputs: onb: 0110, bb: 0100
# Fail: led = 10100, expected = 10101. Inputs: onb: 0110, bb: 0011
# Fail: led = 10101, expected = 10110. Inputs: onb: 0110, bb: 0010
# Fail: led = 10110, expected = 10111. Inputs: onb: 0110, bb: 0001
# Fail: led = 10111, expected = 11000. Inputs: onb: 0110, bb: 0000
# Fail: led = 11001, expected = 01010. Inputs: onb: 0101, bb: 1111
# Fail: led = 01010, expected = 01011. Inputs: onb: 0101, bb: 1110
# Fail: led = 01011, expected = 01100. Inputs: onb: 0101, bb: 1101
# Fail: led = 01100, expected = 01101. Inputs: onb: 0101, bb: 1100
# Fail: led = 01101, expected = 01110. Inputs: onb: 0101, bb: 1011
# Fail: led = 01110, expected = 01111. Inputs: onb: 0101, bb: 1010
# Fail: led = 01111, expected = 10000. Inputs: onb: 0101, bb: 1001
# Fail: led = 10000, expected = 10001. Inputs: onb: 0101, bb: 1000
# Fail: led = 10001, expected = 10010. Inputs: onb: 0101, bb: 0111
# Fail: led = 10010, expected = 10011. Inputs: onb: 0101, bb: 0110
# Fail: led = 10011, expected = 10100. Inputs: onb: 0101, bb: 0101
# Fail: led = 10100, expected = 10101. Inputs: onb: 0101, bb: 0100
# Fail: led = 10101, expected = 10110. Inputs: onb: 0101, bb: 0011
# Fail: led = 10110, expected = 10111. Inputs: onb: 0101, bb: 0010
# Fail: led = 10111, expected = 11000. Inputs: onb: 0101, bb: 0001
# Fail: led = 11000, expected = 11001. Inputs: onb: 0101, bb: 0000
# Fail: led = 11010, expected = 01011. Inputs: onb: 0100, bb: 1111
# Fail: led = 01011, expected = 01100. Inputs: onb: 0100, bb: 1110
# Fail: led = 01100, expected = 01101. Inputs: onb: 0100, bb: 1101
# Fail: led = 01101, expected = 01110. Inputs: onb: 0100, bb: 1100
# Fail: led = 01110, expected = 01111. Inputs: onb: 0100, bb: 1011
# Fail: led = 01111, expected = 10000. Inputs: onb: 0100, bb: 1010
# Fail: led = 10000, expected = 10001. Inputs: onb: 0100, bb: 1001
# Fail: led = 10001, expected = 10010. Inputs: onb: 0100, bb: 1000
# Fail: led = 10010, expected = 10011. Inputs: onb: 0100, bb: 0111
# Fail: led = 10011, expected = 10100. Inputs: onb: 0100, bb: 0110
# Fail: led = 10100, expected = 10101. Inputs: onb: 0100, bb: 0101
# Fail: led = 10101, expected = 10110. Inputs: onb: 0100, bb: 0100
# Fail: led = 10110, expected = 10111. Inputs: onb: 0100, bb: 0011
# Fail: led = 10111, expected = 11000. Inputs: onb: 0100, bb: 0010
# Fail: led = 11000, expected = 11001. Inputs: onb: 0100, bb: 0001
# Fail: led = 11001, expected = 11010. Inputs: onb: 0100, bb: 0000
# Fail: led = 11011, expected = 01100. Inputs: onb: 0011, bb: 1111
# Fail: led = 01100, expected = 01101. Inputs: onb: 0011, bb: 1110
# Fail: led = 01101, expected = 01110. Inputs: onb: 0011, bb: 1101
# Fail: led = 01110, expected = 01111. Inputs: onb: 0011, bb: 1100
# Fail: led = 01111, expected = 10000. Inputs: onb: 0011, bb: 1011
# Fail: led = 10000, expected = 10001. Inputs: onb: 0011, bb: 1010
# Fail: led = 10001, expected = 10010. Inputs: onb: 0011, bb: 1001
# Fail: led = 10010, expected = 10011. Inputs: onb: 0011, bb: 1000
# Fail: led = 10011, expected = 10100. Inputs: onb: 0011, bb: 0111
# Fail: led = 10100, expected = 10101. Inputs: onb: 0011, bb: 0110
# Fail: led = 10101, expected = 10110. Inputs: onb: 0011, bb: 0101
# Fail: led = 10110, expected = 10111. Inputs: onb: 0011, bb: 0100
# Fail: led = 10111, expected = 11000. Inputs: onb: 0011, bb: 0011
# Fail: led = 11000, expected = 11001. Inputs: onb: 0011, bb: 0010
# Fail: led = 11001, expected = 11010. Inputs: onb: 0011, bb: 0001
# Fail: led = 11010, expected = 11011. Inputs: onb: 0011, bb: 0000
# Fail: led = 11100, expected = 01101. Inputs: onb: 0010, bb: 1111
# Fail: led = 01101, expected = 01110. Inputs: onb: 0010, bb: 1110
# Fail: led = 01110, expected = 01111. Inputs: onb: 0010, bb: 1101
# Fail: led = 01111, expected = 10000. Inputs: onb: 0010, bb: 1100
# Fail: led = 10000, expected = 10001. Inputs: onb: 0010, bb: 1011
# Fail: led = 10001, expected = 10010. Inputs: onb: 0010, bb: 1010
# Fail: led = 10010, expected = 10011. Inputs: onb: 0010, bb: 1001
# Fail: led = 10011, expected = 10100. Inputs: onb: 0010, bb: 1000
# Fail: led = 10100, expected = 10101. Inputs: onb: 0010, bb: 0111
# Fail: led = 10101, expected = 10110. Inputs: onb: 0010, bb: 0110
# Fail: led = 10110, expected = 10111. Inputs: onb: 0010, bb: 0101
# Fail: led = 10111, expected = 11000. Inputs: onb: 0010, bb: 0100
# Fail: led = 11000, expected = 11001. Inputs: onb: 0010, bb: 0011
# Fail: led = 11001, expected = 11010. Inputs: onb: 0010, bb: 0010
# Fail: led = 11010, expected = 11011. Inputs: onb: 0010, bb: 0001
# Fail: led = 11011, expected = 11100. Inputs: onb: 0010, bb: 0000
# Fail: led = 11101, expected = 01110. Inputs: onb: 0001, bb: 1111
# Fail: led = 01110, expected = 01111. Inputs: onb: 0001, bb: 1110
# Fail: led = 01111, expected = 10000. Inputs: onb: 0001, bb: 1101
# Fail: led = 10000, expected = 10001. Inputs: onb: 0001, bb: 1100
# Fail: led = 10001, expected = 10010. Inputs: onb: 0001, bb: 1011
# Fail: led = 10010, expected = 10011. Inputs: onb: 0001, bb: 1010
# Fail: led = 10011, expected = 10100. Inputs: onb: 0001, bb: 1001
# Fail: led = 10100, expected = 10101. Inputs: onb: 0001, bb: 1000
# Fail: led = 10101, expected = 10110. Inputs: onb: 0001, bb: 0111
# Fail: led = 10110, expected = 10111. Inputs: onb: 0001, bb: 0110
# Fail: led = 10111, expected = 11000. Inputs: onb: 0001, bb: 0101
# Fail: led = 11000, expected = 11001. Inputs: onb: 0001, bb: 0100
# Fail: led = 11001, expected = 11010. Inputs: onb: 0001, bb: 0011
# Fail: led = 11010, expected = 11011. Inputs: onb: 0001, bb: 0010
# Fail: led = 11011, expected = 11100. Inputs: onb: 0001, bb: 0001
# Fail: led = 11100, expected = 11101. Inputs: onb: 0001, bb: 0000
# Fail: led = 11110, expected = 01111. Inputs: onb: 0000, bb: 1111
# Fail: led = 01111, expected = 10000. Inputs: onb: 0000, bb: 1110
# Fail: led = 10000, expected = 10001. Inputs: onb: 0000, bb: 1101
# Fail: led = 10001, expected = 10010. Inputs: onb: 0000, bb: 1100
# Fail: led = 10010, expected = 10011. Inputs: onb: 0000, bb: 1011
# Fail: led = 10011, expected = 10100. Inputs: onb: 0000, bb: 1010
# Fail: led = 10100, expected = 10101. Inputs: onb: 0000, bb: 1001
# Fail: led = 10101, expected = 10110. Inputs: onb: 0000, bb: 1000
# Fail: led = 10110, expected = 10111. Inputs: onb: 0000, bb: 0111
# Fail: led = 10111, expected = 11000. Inputs: onb: 0000, bb: 0110
# Fail: led = 11000, expected = 11001. Inputs: onb: 0000, bb: 0101
# Fail: led = 11001, expected = 11010. Inputs: onb: 0000, bb: 0100
# Fail: led = 11010, expected = 11011. Inputs: onb: 0000, bb: 0011
# Fail: led = 11011, expected = 11100. Inputs: onb: 0000, bb: 0010
# Fail: led = 11100, expected = 11101. Inputs: onb: 0000, bb: 0001
# Fail: led = 11101, expected = 11110. Inputs: onb: 0000, bb: 0000
# Completed        256 tests with        255 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv(62)
#    Time: 2570 ns  Iteration: 0  Instance: /testbench_led_adder
# Break in Module testbench_led_adder at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv line 62
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_led_adder
# End time: 23:12:23 on Sep 09,2025, Elapsed time: 0:04:02
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_led_adder 
# Start time: 23:12:23 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_led_adder(fast)
# Loading work.led_adder(fast)
add wave  \
sim:/testbench_led_adder/clk \
sim:/testbench_led_adder/reset \
sim:/testbench_led_adder/onboard_sw \
sim:/testbench_led_adder/bboard_sw \
sim:/testbench_led_adder/led \
sim:/testbench_led_adder/led_expected \
sim:/testbench_led_adder/test_idx \
sim:/testbench_led_adder/errors
run 100000000
# Fail: led = 00000, expected = 00001. Inputs: onb: 1111, bb: 1110
# Fail: led = 00001, expected = 00010. Inputs: onb: 1111, bb: 1101
# Fail: led = 00010, expected = 00011. Inputs: onb: 1111, bb: 1100
# Fail: led = 00011, expected = 00100. Inputs: onb: 1111, bb: 1011
# Fail: led = 00100, expected = 00101. Inputs: onb: 1111, bb: 1010
# Fail: led = 00101, expected = 00110. Inputs: onb: 1111, bb: 1001
# Fail: led = 00110, expected = 00111. Inputs: onb: 1111, bb: 1000
# Fail: led = 00111, expected = 01000. Inputs: onb: 1111, bb: 0111
# Fail: led = 01000, expected = 01001. Inputs: onb: 1111, bb: 0110
# Fail: led = 01001, expected = 01010. Inputs: onb: 1111, bb: 0101
# Fail: led = 01010, expected = 01011. Inputs: onb: 1111, bb: 0100
# Fail: led = 01011, expected = 01100. Inputs: onb: 1111, bb: 0011
# Fail: led = 01100, expected = 01101. Inputs: onb: 1111, bb: 0010
# Fail: led = 01101, expected = 01110. Inputs: onb: 1111, bb: 0001
# Fail: led = 01110, expected = 01111. Inputs: onb: 1111, bb: 0000
# Fail: led = 10000, expected = 00001. Inputs: onb: 1110, bb: 1111
# Fail: led = 00001, expected = 00010. Inputs: onb: 1110, bb: 1110
# Fail: led = 00010, expected = 00011. Inputs: onb: 1110, bb: 1101
# Fail: led = 00011, expected = 00100. Inputs: onb: 1110, bb: 1100
# Fail: led = 00100, expected = 00101. Inputs: onb: 1110, bb: 1011
# Fail: led = 00101, expected = 00110. Inputs: onb: 1110, bb: 1010
# Fail: led = 00110, expected = 00111. Inputs: onb: 1110, bb: 1001
# Fail: led = 00111, expected = 01000. Inputs: onb: 1110, bb: 1000
# Fail: led = 01000, expected = 01001. Inputs: onb: 1110, bb: 0111
# Fail: led = 01001, expected = 01010. Inputs: onb: 1110, bb: 0110
# Fail: led = 01010, expected = 01011. Inputs: onb: 1110, bb: 0101
# Fail: led = 01011, expected = 01100. Inputs: onb: 1110, bb: 0100
# Fail: led = 01100, expected = 01101. Inputs: onb: 1110, bb: 0011
# Fail: led = 01101, expected = 01110. Inputs: onb: 1110, bb: 0010
# Fail: led = 01110, expected = 01111. Inputs: onb: 1110, bb: 0001
# Fail: led = 01111, expected = 10000. Inputs: onb: 1110, bb: 0000
# Fail: led = 10001, expected = 00010. Inputs: onb: 1101, bb: 1111
# Fail: led = 00010, expected = 00011. Inputs: onb: 1101, bb: 1110
# Fail: led = 00011, expected = 00100. Inputs: onb: 1101, bb: 1101
# Fail: led = 00100, expected = 00101. Inputs: onb: 1101, bb: 1100
# Fail: led = 00101, expected = 00110. Inputs: onb: 1101, bb: 1011
# Fail: led = 00110, expected = 00111. Inputs: onb: 1101, bb: 1010
# Fail: led = 00111, expected = 01000. Inputs: onb: 1101, bb: 1001
# Fail: led = 01000, expected = 01001. Inputs: onb: 1101, bb: 1000
# Fail: led = 01001, expected = 01010. Inputs: onb: 1101, bb: 0111
# Fail: led = 01010, expected = 01011. Inputs: onb: 1101, bb: 0110
# Fail: led = 01011, expected = 01100. Inputs: onb: 1101, bb: 0101
# Fail: led = 01100, expected = 01101. Inputs: onb: 1101, bb: 0100
# Fail: led = 01101, expected = 01110. Inputs: onb: 1101, bb: 0011
# Fail: led = 01110, expected = 01111. Inputs: onb: 1101, bb: 0010
# Fail: led = 01111, expected = 10000. Inputs: onb: 1101, bb: 0001
# Fail: led = 10000, expected = 10001. Inputs: onb: 1101, bb: 0000
# Fail: led = 10010, expected = 00011. Inputs: onb: 1100, bb: 1111
# Fail: led = 00011, expected = 00100. Inputs: onb: 1100, bb: 1110
# Fail: led = 00100, expected = 00101. Inputs: onb: 1100, bb: 1101
# Fail: led = 00101, expected = 00110. Inputs: onb: 1100, bb: 1100
# Fail: led = 00110, expected = 00111. Inputs: onb: 1100, bb: 1011
# Fail: led = 00111, expected = 01000. Inputs: onb: 1100, bb: 1010
# Fail: led = 01000, expected = 01001. Inputs: onb: 1100, bb: 1001
# Fail: led = 01001, expected = 01010. Inputs: onb: 1100, bb: 1000
# Fail: led = 01010, expected = 01011. Inputs: onb: 1100, bb: 0111
# Fail: led = 01011, expected = 01100. Inputs: onb: 1100, bb: 0110
# Fail: led = 01100, expected = 01101. Inputs: onb: 1100, bb: 0101
# Fail: led = 01101, expected = 01110. Inputs: onb: 1100, bb: 0100
# Fail: led = 01110, expected = 01111. Inputs: onb: 1100, bb: 0011
# Fail: led = 01111, expected = 10000. Inputs: onb: 1100, bb: 0010
# Fail: led = 10000, expected = 10001. Inputs: onb: 1100, bb: 0001
# Fail: led = 10001, expected = 10010. Inputs: onb: 1100, bb: 0000
# Fail: led = 10011, expected = 00100. Inputs: onb: 1011, bb: 1111
# Fail: led = 00100, expected = 00101. Inputs: onb: 1011, bb: 1110
# Fail: led = 00101, expected = 00110. Inputs: onb: 1011, bb: 1101
# Fail: led = 00110, expected = 00111. Inputs: onb: 1011, bb: 1100
# Fail: led = 00111, expected = 01000. Inputs: onb: 1011, bb: 1011
# Fail: led = 01000, expected = 01001. Inputs: onb: 1011, bb: 1010
# Fail: led = 01001, expected = 01010. Inputs: onb: 1011, bb: 1001
# Fail: led = 01010, expected = 01011. Inputs: onb: 1011, bb: 1000
# Fail: led = 01011, expected = 01100. Inputs: onb: 1011, bb: 0111
# Fail: led = 01100, expected = 01101. Inputs: onb: 1011, bb: 0110
# Fail: led = 01101, expected = 01110. Inputs: onb: 1011, bb: 0101
# Fail: led = 01110, expected = 01111. Inputs: onb: 1011, bb: 0100
# Fail: led = 01111, expected = 10000. Inputs: onb: 1011, bb: 0011
# Fail: led = 10000, expected = 10001. Inputs: onb: 1011, bb: 0010
# Fail: led = 10001, expected = 10010. Inputs: onb: 1011, bb: 0001
# Fail: led = 10010, expected = 10011. Inputs: onb: 1011, bb: 0000
# Fail: led = 10100, expected = 00101. Inputs: onb: 1010, bb: 1111
# Fail: led = 00101, expected = 00110. Inputs: onb: 1010, bb: 1110
# Fail: led = 00110, expected = 00111. Inputs: onb: 1010, bb: 1101
# Fail: led = 00111, expected = 01000. Inputs: onb: 1010, bb: 1100
# Fail: led = 01000, expected = 01001. Inputs: onb: 1010, bb: 1011
# Fail: led = 01001, expected = 01010. Inputs: onb: 1010, bb: 1010
# Fail: led = 01010, expected = 01011. Inputs: onb: 1010, bb: 1001
# Fail: led = 01011, expected = 01100. Inputs: onb: 1010, bb: 1000
# Fail: led = 01100, expected = 01101. Inputs: onb: 1010, bb: 0111
# Fail: led = 01101, expected = 01110. Inputs: onb: 1010, bb: 0110
# Fail: led = 01110, expected = 01111. Inputs: onb: 1010, bb: 0101
# Fail: led = 01111, expected = 10000. Inputs: onb: 1010, bb: 0100
# Fail: led = 10000, expected = 10001. Inputs: onb: 1010, bb: 0011
# Fail: led = 10001, expected = 10010. Inputs: onb: 1010, bb: 0010
# Fail: led = 10010, expected = 10011. Inputs: onb: 1010, bb: 0001
# Fail: led = 10011, expected = 10100. Inputs: onb: 1010, bb: 0000
# Fail: led = 10101, expected = 00110. Inputs: onb: 1001, bb: 1111
# Fail: led = 00110, expected = 00111. Inputs: onb: 1001, bb: 1110
# Fail: led = 00111, expected = 01000. Inputs: onb: 1001, bb: 1101
# Fail: led = 01000, expected = 01001. Inputs: onb: 1001, bb: 1100
# Fail: led = 01001, expected = 01010. Inputs: onb: 1001, bb: 1011
# Fail: led = 01010, expected = 01011. Inputs: onb: 1001, bb: 1010
# Fail: led = 01011, expected = 01100. Inputs: onb: 1001, bb: 1001
# Fail: led = 01100, expected = 01101. Inputs: onb: 1001, bb: 1000
# Fail: led = 01101, expected = 01110. Inputs: onb: 1001, bb: 0111
# Fail: led = 01110, expected = 01111. Inputs: onb: 1001, bb: 0110
# Fail: led = 01111, expected = 10000. Inputs: onb: 1001, bb: 0101
# Fail: led = 10000, expected = 10001. Inputs: onb: 1001, bb: 0100
# Fail: led = 10001, expected = 10010. Inputs: onb: 1001, bb: 0011
# Fail: led = 10010, expected = 10011. Inputs: onb: 1001, bb: 0010
# Fail: led = 10011, expected = 10100. Inputs: onb: 1001, bb: 0001
# Fail: led = 10100, expected = 10101. Inputs: onb: 1001, bb: 0000
# Fail: led = 10110, expected = 00111. Inputs: onb: 1000, bb: 1111
# Fail: led = 00111, expected = 01000. Inputs: onb: 1000, bb: 1110
# Fail: led = 01000, expected = 01001. Inputs: onb: 1000, bb: 1101
# Fail: led = 01001, expected = 01010. Inputs: onb: 1000, bb: 1100
# Fail: led = 01010, expected = 01011. Inputs: onb: 1000, bb: 1011
# Fail: led = 01011, expected = 01100. Inputs: onb: 1000, bb: 1010
# Fail: led = 01100, expected = 01101. Inputs: onb: 1000, bb: 1001
# Fail: led = 01101, expected = 01110. Inputs: onb: 1000, bb: 1000
# Fail: led = 01110, expected = 01111. Inputs: onb: 1000, bb: 0111
# Fail: led = 01111, expected = 10000. Inputs: onb: 1000, bb: 0110
# Fail: led = 10000, expected = 10001. Inputs: onb: 1000, bb: 0101
# Fail: led = 10001, expected = 10010. Inputs: onb: 1000, bb: 0100
# Fail: led = 10010, expected = 10011. Inputs: onb: 1000, bb: 0011
# Fail: led = 10011, expected = 10100. Inputs: onb: 1000, bb: 0010
# Fail: led = 10100, expected = 10101. Inputs: onb: 1000, bb: 0001
# Fail: led = 10101, expected = 10110. Inputs: onb: 1000, bb: 0000
# Fail: led = 10111, expected = 01000. Inputs: onb: 0111, bb: 1111
# Fail: led = 01000, expected = 01001. Inputs: onb: 0111, bb: 1110
# Fail: led = 01001, expected = 01010. Inputs: onb: 0111, bb: 1101
# Fail: led = 01010, expected = 01011. Inputs: onb: 0111, bb: 1100
# Fail: led = 01011, expected = 01100. Inputs: onb: 0111, bb: 1011
# Fail: led = 01100, expected = 01101. Inputs: onb: 0111, bb: 1010
# Fail: led = 01101, expected = 01110. Inputs: onb: 0111, bb: 1001
# Fail: led = 01110, expected = 01111. Inputs: onb: 0111, bb: 1000
# Fail: led = 01111, expected = 10000. Inputs: onb: 0111, bb: 0111
# Fail: led = 10000, expected = 10001. Inputs: onb: 0111, bb: 0110
# Fail: led = 10001, expected = 10010. Inputs: onb: 0111, bb: 0101
# Fail: led = 10010, expected = 10011. Inputs: onb: 0111, bb: 0100
# Fail: led = 10011, expected = 10100. Inputs: onb: 0111, bb: 0011
# Fail: led = 10100, expected = 10101. Inputs: onb: 0111, bb: 0010
# Fail: led = 10101, expected = 10110. Inputs: onb: 0111, bb: 0001
# Fail: led = 10110, expected = 10111. Inputs: onb: 0111, bb: 0000
# Fail: led = 11000, expected = 01001. Inputs: onb: 0110, bb: 1111
# Fail: led = 01001, expected = 01010. Inputs: onb: 0110, bb: 1110
# Fail: led = 01010, expected = 01011. Inputs: onb: 0110, bb: 1101
# Fail: led = 01011, expected = 01100. Inputs: onb: 0110, bb: 1100
# Fail: led = 01100, expected = 01101. Inputs: onb: 0110, bb: 1011
# Fail: led = 01101, expected = 01110. Inputs: onb: 0110, bb: 1010
# Fail: led = 01110, expected = 01111. Inputs: onb: 0110, bb: 1001
# Fail: led = 01111, expected = 10000. Inputs: onb: 0110, bb: 1000
# Fail: led = 10000, expected = 10001. Inputs: onb: 0110, bb: 0111
# Fail: led = 10001, expected = 10010. Inputs: onb: 0110, bb: 0110
# Fail: led = 10010, expected = 10011. Inputs: onb: 0110, bb: 0101
# Fail: led = 10011, expected = 10100. Inputs: onb: 0110, bb: 0100
# Fail: led = 10100, expected = 10101. Inputs: onb: 0110, bb: 0011
# Fail: led = 10101, expected = 10110. Inputs: onb: 0110, bb: 0010
# Fail: led = 10110, expected = 10111. Inputs: onb: 0110, bb: 0001
# Fail: led = 10111, expected = 11000. Inputs: onb: 0110, bb: 0000
# Fail: led = 11001, expected = 01010. Inputs: onb: 0101, bb: 1111
# Fail: led = 01010, expected = 01011. Inputs: onb: 0101, bb: 1110
# Fail: led = 01011, expected = 01100. Inputs: onb: 0101, bb: 1101
# Fail: led = 01100, expected = 01101. Inputs: onb: 0101, bb: 1100
# Fail: led = 01101, expected = 01110. Inputs: onb: 0101, bb: 1011
# Fail: led = 01110, expected = 01111. Inputs: onb: 0101, bb: 1010
# Fail: led = 01111, expected = 10000. Inputs: onb: 0101, bb: 1001
# Fail: led = 10000, expected = 10001. Inputs: onb: 0101, bb: 1000
# Fail: led = 10001, expected = 10010. Inputs: onb: 0101, bb: 0111
# Fail: led = 10010, expected = 10011. Inputs: onb: 0101, bb: 0110
# Fail: led = 10011, expected = 10100. Inputs: onb: 0101, bb: 0101
# Fail: led = 10100, expected = 10101. Inputs: onb: 0101, bb: 0100
# Fail: led = 10101, expected = 10110. Inputs: onb: 0101, bb: 0011
# Fail: led = 10110, expected = 10111. Inputs: onb: 0101, bb: 0010
# Fail: led = 10111, expected = 11000. Inputs: onb: 0101, bb: 0001
# Fail: led = 11000, expected = 11001. Inputs: onb: 0101, bb: 0000
# Fail: led = 11010, expected = 01011. Inputs: onb: 0100, bb: 1111
# Fail: led = 01011, expected = 01100. Inputs: onb: 0100, bb: 1110
# Fail: led = 01100, expected = 01101. Inputs: onb: 0100, bb: 1101
# Fail: led = 01101, expected = 01110. Inputs: onb: 0100, bb: 1100
# Fail: led = 01110, expected = 01111. Inputs: onb: 0100, bb: 1011
# Fail: led = 01111, expected = 10000. Inputs: onb: 0100, bb: 1010
# Fail: led = 10000, expected = 10001. Inputs: onb: 0100, bb: 1001
# Fail: led = 10001, expected = 10010. Inputs: onb: 0100, bb: 1000
# Fail: led = 10010, expected = 10011. Inputs: onb: 0100, bb: 0111
# Fail: led = 10011, expected = 10100. Inputs: onb: 0100, bb: 0110
# Fail: led = 10100, expected = 10101. Inputs: onb: 0100, bb: 0101
# Fail: led = 10101, expected = 10110. Inputs: onb: 0100, bb: 0100
# Fail: led = 10110, expected = 10111. Inputs: onb: 0100, bb: 0011
# Fail: led = 10111, expected = 11000. Inputs: onb: 0100, bb: 0010
# Fail: led = 11000, expected = 11001. Inputs: onb: 0100, bb: 0001
# Fail: led = 11001, expected = 11010. Inputs: onb: 0100, bb: 0000
# Fail: led = 11011, expected = 01100. Inputs: onb: 0011, bb: 1111
# Fail: led = 01100, expected = 01101. Inputs: onb: 0011, bb: 1110
# Fail: led = 01101, expected = 01110. Inputs: onb: 0011, bb: 1101
# Fail: led = 01110, expected = 01111. Inputs: onb: 0011, bb: 1100
# Fail: led = 01111, expected = 10000. Inputs: onb: 0011, bb: 1011
# Fail: led = 10000, expected = 10001. Inputs: onb: 0011, bb: 1010
# Fail: led = 10001, expected = 10010. Inputs: onb: 0011, bb: 1001
# Fail: led = 10010, expected = 10011. Inputs: onb: 0011, bb: 1000
# Fail: led = 10011, expected = 10100. Inputs: onb: 0011, bb: 0111
# Fail: led = 10100, expected = 10101. Inputs: onb: 0011, bb: 0110
# Fail: led = 10101, expected = 10110. Inputs: onb: 0011, bb: 0101
# Fail: led = 10110, expected = 10111. Inputs: onb: 0011, bb: 0100
# Fail: led = 10111, expected = 11000. Inputs: onb: 0011, bb: 0011
# Fail: led = 11000, expected = 11001. Inputs: onb: 0011, bb: 0010
# Fail: led = 11001, expected = 11010. Inputs: onb: 0011, bb: 0001
# Fail: led = 11010, expected = 11011. Inputs: onb: 0011, bb: 0000
# Fail: led = 11100, expected = 01101. Inputs: onb: 0010, bb: 1111
# Fail: led = 01101, expected = 01110. Inputs: onb: 0010, bb: 1110
# Fail: led = 01110, expected = 01111. Inputs: onb: 0010, bb: 1101
# Fail: led = 01111, expected = 10000. Inputs: onb: 0010, bb: 1100
# Fail: led = 10000, expected = 10001. Inputs: onb: 0010, bb: 1011
# Fail: led = 10001, expected = 10010. Inputs: onb: 0010, bb: 1010
# Fail: led = 10010, expected = 10011. Inputs: onb: 0010, bb: 1001
# Fail: led = 10011, expected = 10100. Inputs: onb: 0010, bb: 1000
# Fail: led = 10100, expected = 10101. Inputs: onb: 0010, bb: 0111
# Fail: led = 10101, expected = 10110. Inputs: onb: 0010, bb: 0110
# Fail: led = 10110, expected = 10111. Inputs: onb: 0010, bb: 0101
# Fail: led = 10111, expected = 11000. Inputs: onb: 0010, bb: 0100
# Fail: led = 11000, expected = 11001. Inputs: onb: 0010, bb: 0011
# Fail: led = 11001, expected = 11010. Inputs: onb: 0010, bb: 0010
# Fail: led = 11010, expected = 11011. Inputs: onb: 0010, bb: 0001
# Fail: led = 11011, expected = 11100. Inputs: onb: 0010, bb: 0000
# Fail: led = 11101, expected = 01110. Inputs: onb: 0001, bb: 1111
# Fail: led = 01110, expected = 01111. Inputs: onb: 0001, bb: 1110
# Fail: led = 01111, expected = 10000. Inputs: onb: 0001, bb: 1101
# Fail: led = 10000, expected = 10001. Inputs: onb: 0001, bb: 1100
# Fail: led = 10001, expected = 10010. Inputs: onb: 0001, bb: 1011
# Fail: led = 10010, expected = 10011. Inputs: onb: 0001, bb: 1010
# Fail: led = 10011, expected = 10100. Inputs: onb: 0001, bb: 1001
# Fail: led = 10100, expected = 10101. Inputs: onb: 0001, bb: 1000
# Fail: led = 10101, expected = 10110. Inputs: onb: 0001, bb: 0111
# Fail: led = 10110, expected = 10111. Inputs: onb: 0001, bb: 0110
# Fail: led = 10111, expected = 11000. Inputs: onb: 0001, bb: 0101
# Fail: led = 11000, expected = 11001. Inputs: onb: 0001, bb: 0100
# Fail: led = 11001, expected = 11010. Inputs: onb: 0001, bb: 0011
# Fail: led = 11010, expected = 11011. Inputs: onb: 0001, bb: 0010
# Fail: led = 11011, expected = 11100. Inputs: onb: 0001, bb: 0001
# Fail: led = 11100, expected = 11101. Inputs: onb: 0001, bb: 0000
# Fail: led = 11110, expected = 01111. Inputs: onb: 0000, bb: 1111
# Fail: led = 01111, expected = 10000. Inputs: onb: 0000, bb: 1110
# Fail: led = 10000, expected = 10001. Inputs: onb: 0000, bb: 1101
# Fail: led = 10001, expected = 10010. Inputs: onb: 0000, bb: 1100
# Fail: led = 10010, expected = 10011. Inputs: onb: 0000, bb: 1011
# Fail: led = 10011, expected = 10100. Inputs: onb: 0000, bb: 1010
# Fail: led = 10100, expected = 10101. Inputs: onb: 0000, bb: 1001
# Fail: led = 10101, expected = 10110. Inputs: onb: 0000, bb: 1000
# Fail: led = 10110, expected = 10111. Inputs: onb: 0000, bb: 0111
# Fail: led = 10111, expected = 11000. Inputs: onb: 0000, bb: 0110
# Fail: led = 11000, expected = 11001. Inputs: onb: 0000, bb: 0101
# Fail: led = 11001, expected = 11010. Inputs: onb: 0000, bb: 0100
# Fail: led = 11010, expected = 11011. Inputs: onb: 0000, bb: 0011
# Fail: led = 11011, expected = 11100. Inputs: onb: 0000, bb: 0010
# Fail: led = 11100, expected = 11101. Inputs: onb: 0000, bb: 0001
# Fail: led = 11101, expected = 11110. Inputs: onb: 0000, bb: 0000
# Completed        256 tests with        255 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv(62)
#    Time: 2570 ns  Iteration: 0  Instance: /testbench_led_adder
# Break in Module testbench_led_adder at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv line 62
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_led_adder
# End time: 23:13:42 on Sep 09,2025, Elapsed time: 0:01:19
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_led_adder 
# Start time: 23:13:42 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_led_adder(fast)
# Loading work.led_adder(fast)
add wave  \
sim:/testbench_led_adder/clk \
sim:/testbench_led_adder/reset \
sim:/testbench_led_adder/onboard_sw \
sim:/testbench_led_adder/bboard_sw \
sim:/testbench_led_adder/led \
sim:/testbench_led_adder/led_expected \
sim:/testbench_led_adder/test_idx \
sim:/testbench_led_adder/errors
run 100000000
# Completed        256 tests with          0 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv(60)
#    Time: 2570 ns  Iteration: 0  Instance: /testbench_led_adder
# Break in Module testbench_led_adder at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_led_adder.sv line 60
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_clk_gen
# End time: 23:15:03 on Sep 09,2025, Elapsed time: 0:01:21
# Errors: 0, Warnings: 2
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_clk_gen 
# Start time: 23:15:03 on Sep 09,2025
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.testbench_clk_gen(fast)
# Loading work.clk_gen(fast)
# Loading iCE40UP.HSOSC(fast)
add wave  \
sim:/testbench_clk_gen/clk \
sim:/testbench_clk_gen/reset \
sim:/testbench_clk_gen/test_clk
run 100000000
# Completed test for clk generation.
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv(40)
#    Time: 20 ns  Iteration: 0  Instance: /testbench_clk_gen
# Break in Module testbench_clk_gen at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_clk_gen.sv line 40
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg
# End time: 23:16:18 on Sep 09,2025, Elapsed time: 0:01:15
# Errors: 0, Warnings: 1
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg 
# Start time: 23:16:18 on Sep 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg(fast)
# Loading work.sev_seg(fast)
add wave  \
sim:/testbench_sev_seg/clk \
sim:/testbench_sev_seg/reset \
sim:/testbench_sev_seg/s \
sim:/testbench_sev_seg/seg \
sim:/testbench_sev_seg/segexpected \
sim:/testbench_sev_seg/test_idx \
sim:/testbench_sev_seg/errors
run 100000000
# Fail: Output = 0011001, expected = 0011001. Input: s = 1011.
#          0 tests completed with          1 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv(70)
#    Time: 150 ns  Iteration: 0  Instance: /testbench_sev_seg
# Break in Module testbench_sev_seg at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv line 70
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg
# End time: 23:19:04 on Sep 09,2025, Elapsed time: 0:02:46
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg 
# Start time: 23:19:04 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg(fast)
# Loading work.sev_seg(fast)
add wave  \
sim:/testbench_sev_seg/clk \
sim:/testbench_sev_seg/reset \
sim:/testbench_sev_seg/s \
sim:/testbench_sev_seg/seg \
sim:/testbench_sev_seg/segexpected \
sim:/testbench_sev_seg/test_idx \
sim:/testbench_sev_seg/errors
run 100000000
#          0 tests completed with          0 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv(70)
#    Time: 150 ns  Iteration: 0  Instance: /testbench_sev_seg
# Break in Module testbench_sev_seg at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv line 70
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg
# End time: 23:20:18 on Sep 09,2025, Elapsed time: 0:01:14
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg 
# Start time: 23:20:18 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg(fast)
# Loading work.sev_seg(fast)
add wave  \
sim:/testbench_sev_seg/clk \
sim:/testbench_sev_seg/reset \
sim:/testbench_sev_seg/s \
sim:/testbench_sev_seg/seg \
sim:/testbench_sev_seg/test_idx \
sim:/testbench_sev_seg/errors
run 100000000
#          0 tests completed with          0 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv(70)
#    Time: 150 ns  Iteration: 0  Instance: /testbench_sev_seg
# Break in Module testbench_sev_seg at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv line 70
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg
# End time: 23:21:58 on Sep 09,2025, Elapsed time: 0:01:40
# Errors: 0, Warnings: 2
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg 
# Start time: 23:21:58 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg(fast)
# Loading work.sev_seg(fast)
add wave  \
sim:/testbench_sev_seg/clk \
sim:/testbench_sev_seg/reset \
sim:/testbench_sev_seg/s \
sim:/testbench_sev_seg/seg \
sim:/testbench_sev_seg/test_idx \
sim:/testbench_sev_seg/errors
run 100000000
# All tests completed with          0 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv(70)
#    Time: 150 ns  Iteration: 0  Instance: /testbench_sev_seg
# Break in Module testbench_sev_seg at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg.sv line 70
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg_sel
# End time: 23:23:19 on Sep 09,2025, Elapsed time: 0:01:21
# Errors: 0, Warnings: 3
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg_sel 
# Start time: 23:23:19 on Sep 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
add wave  \
sim:/testbench_sev_seg_sel/clk \
sim:/testbench_sev_seg_sel/reset \
sim:/testbench_sev_seg_sel/onboard_sw \
sim:/testbench_sev_seg_sel/bboard_sw \
sim:/testbench_sev_seg_sel/seg1en \
sim:/testbench_sev_seg_sel/seg2en \
sim:/testbench_sev_seg_sel/sw \
sim:/testbench_sev_seg_sel/sw_expected \
sim:/testbench_sev_seg_sel/test_idx \
sim:/testbench_sev_seg_sel/errors
run 100000000
run 100000000
run 100000000
run 100000000
run 100000000
run 100000000
run 100000000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1111
run 100000000
run 100000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-8009) Loading existing optimized design _opt
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
run 100000000000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0000
run 100000000000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-8009) Loading existing optimized design _opt
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
run 100000000000000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0000
# Completed        256 tests with 1000000000 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv(136)
#    Time: 320002570 ns  Iteration: 0  Instance: /testbench_sev_seg_sel
# Break in Module testbench_sev_seg_sel at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv line 136
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg_sel
# End time: 23:28:55 on Sep 09,2025, Elapsed time: 0:05:36
# Errors: 0, Warnings: 4
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg_sel 
# Start time: 23:28:55 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
add wave  \
sim:/testbench_sev_seg_sel/clk \
sim:/testbench_sev_seg_sel/reset \
sim:/testbench_sev_seg_sel/onboard_sw \
sim:/testbench_sev_seg_sel/bboard_sw \
sim:/testbench_sev_seg_sel/seg1en \
sim:/testbench_sev_seg_sel/seg2en \
sim:/testbench_sev_seg_sel/sw \
sim:/testbench_sev_seg_sel/sw_expected \
sim:/testbench_sev_seg_sel/test_idx \
sim:/testbench_sev_seg_sel/errors
run 100000000000000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1111
# Completed        256 tests with 111100000 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv(136)
#    Time: 154882570 ns  Iteration: 0  Instance: /testbench_sev_seg_sel
# Break in Module testbench_sev_seg_sel at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv line 136
# Causality operation skipped due to absence of debug database file
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg_sel
# End time: 23:31:51 on Sep 09,2025, Elapsed time: 0:02:56
# Errors: 0, Warnings: 4
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg_sel 
# Start time: 23:31:51 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
add wave  \
sim:/testbench_sev_seg_sel/clk \
sim:/testbench_sev_seg_sel/reset \
sim:/testbench_sev_seg_sel/onboard_sw \
sim:/testbench_sev_seg_sel/bboard_sw \
sim:/testbench_sev_seg_sel/seg1en \
sim:/testbench_sev_seg_sel/seg2en \
sim:/testbench_sev_seg_sel/sw \
sim:/testbench_sev_seg_sel/sw_expected \
sim:/testbench_sev_seg_sel/test_idx \
sim:/testbench_sev_seg_sel/errors
run 100000000000000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1111, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1111, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1111, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1111, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1110, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1110, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1110, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1110, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1101, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1101, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1101, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1101, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1100, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1100, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1100, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1011, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1011, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1011, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1010, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1010, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1010, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1001, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1001, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1001, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 1000, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 1000, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 1000, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 1000, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0111, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0111, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0111, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0111, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0110, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0110, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0110, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0110, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0101, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0101, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0101, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0101, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0100, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0100, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0100, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0100, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0011, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0011, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0011, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0011, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0010, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0010, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0010, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0010, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0001, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0001, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0001, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0001, bb = 0000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 1000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 1000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 1000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 1000
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0111
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0111
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0111
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0111
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0110
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0110
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0110
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0110
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0101
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0101
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0101
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0101
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0100
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0100
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0100
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0100
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0011
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0011
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0011
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0011
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0010
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0010
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0010
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0010
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0001
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0001
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0001
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0001
# Fail: seg1en = ON, expected: OFF. Inputs: onb: 0000, bb: 0000
# Fail: seg2en = OFF, expected: ON. Inputs: onb: 0000, bb: 0000
# Fail: seg1en = OFF, expected: ON. Inputs: onb = 0000, bb = 0000
# Fail: seg2en = ON, expected: OFF. Inputs: onb = 0000, bb = 0000
# Completed        256 tests with       1022 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv(136)
#    Time: 153602570 ns  Iteration: 0  Instance: /testbench_sev_seg_sel
# Break in Module testbench_sev_seg_sel at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv line 136
# Compile of clk_gen.sv was successful.
# Compile of lab2_mt.sv was successful.
# Compile of led_adder.sv was successful.
# Compile of sev_seg.sv was successful.
# Compile of sev_seg_sel.sv was successful.
# Compile of testbench_clk_gen.sv was successful.
# Compile of testbench_lab2_mt.sv was successful.
# Compile of testbench_led_adder.sv was successful.
# Compile of testbench_sev_seg.sv was successful.
# Compile of testbench_sev_seg_sel.sv was successful.
# 10 compiles, 0 failed with no errors.
vsim -vopt {-voptargs=+acc -L iCE40UP} lab2.testbench_sev_seg_sel
# End time: 23:35:23 on Sep 09,2025, Elapsed time: 0:03:32
# Errors: 0, Warnings: 4
# vsim -vopt -voptargs="+acc -L iCE40UP" lab2.testbench_sev_seg_sel 
# Start time: 23:35:23 on Sep 09,2025
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench_sev_seg_sel(fast)
# Loading work.sev_seg_sel(fast)
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (5) for port 'sw'. The port definition is at: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/sev_seg_sel.sv(17).
#    Time: 0 ps  Iteration: 0  Instance: /testbench_sev_seg_sel/dut File: C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv Line: 22
add wave  \
sim:/testbench_sev_seg_sel/clk \
sim:/testbench_sev_seg_sel/reset \
sim:/testbench_sev_seg_sel/onboard_sw \
sim:/testbench_sev_seg_sel/bboard_sw \
sim:/testbench_sev_seg_sel/seg1en \
sim:/testbench_sev_seg_sel/seg2en \
sim:/testbench_sev_seg_sel/sw \
sim:/testbench_sev_seg_sel/sw_expected \
sim:/testbench_sev_seg_sel/test_idx \
sim:/testbench_sev_seg_sel/errors
run 100000000000000
# Completed        256 tests with          0 errors
# ** Note: $stop    : C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv(136)
#    Time: 153752560 ns  Iteration: 0  Instance: /testbench_sev_seg_sel
# Break in Module testbench_sev_seg_sel at C:/Users/mtatsumi/my_designs/e155-lab2/source/impl_1/testbench_sev_seg_sel.sv line 136
